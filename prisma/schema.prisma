// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  manuscripts Manuscript[]
}

model Manuscript {
  id             Int                 @id @default(autoincrement())
  title          String
  genre          String
  logline        String
  keyWords       String[]
  subjects       String[]
  active         Boolean?
  internalTextId String?
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @default(now())
  user           User                @relation(fields: [userId], references: [id])
  userId         Int
  analysis       ManuscriptAnalysis?
  similarBooks   Book[]
}

model ManuscriptAnalysis {
  id            Int        @id @default(autoincrement())
  plotStructure Int[]
  beats         Int[]
  pace          Int[]
  dialogues     Int[]
  narratives    Int[]
  dialogue_per  Int        @default(0)
  anger         Float[]
  fear          Float[]
  joy           Float[]
  love          Float[]
  sadness       Float[]
  surprise      Float[] 
  emotions      Float[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  manuscript    Manuscript @relation(fields: [manuscriptId], references: [id])
  manuscriptId  Int        @unique
}

model Book {
  id                 Int           @id @default(autoincrement())
  title              String
  author             String
  genre              String
  publicationDate    DateTime
  description        String?
  keywords           String[]
  subjects           String[]
  isbn13             String?
  isbn10             String?
  amazonProductUrl   String?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @default(now())
  analysis           BookAnalysis?
  similarManuscripts Manuscript[]
}

model BookAnalysis {
  id            Int      @id @default(autoincrement())
  plotStructure Int[]
  beats         Int[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  book          Book     @relation(fields: [bookId], references: [id])
  bookId        Int      @unique
}

model BestSellerListAnalysis {
  id            Int        @id @default(autoincrement())
  name          String
  from          DateTime   @default(now())
  genre         String
  to            DateTime   @default(now())
  plotStructure Int[]
  beats         Int[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
}

model ArchtypeAnalysis {
  id            Int        @id @default(autoincrement())
  class         String
  plotStructure Int[]
  beats         Int[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
}
